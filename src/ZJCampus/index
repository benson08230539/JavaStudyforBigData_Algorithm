1-1：21. 合并两个有序链表
1-2：146. LRU 缓存
1-3：25. K 个一组翻转链表

2-1：14. 最长公共前缀
2-2：3. 无重复字符的最长子串（滑动窗口）（跳）
2-3：124. 二叉树中的最大路径和 （回溯）

3-1：206. 反转链表
3-2：199. 二叉树的右视图
3-3：199. bytedance-016. 最短移动距离 ***

4-1：1. 两数之和
4-2：15. 三数之和 （排序，双指针，去重）
4-3：42. 接雨水

5-1：7. 整数反转
5-2：215. 数组中的第K个最大元素 （快排）
5-3：23. 合并K个升序链表 （归并、优先队列）

6-1：33. 搜索旋转排序数组（美团二面）
6-2：54. 螺旋矩阵（转向）
6-3：bytedance-006. 夏季特惠（转化后背包）（白嫖）

7-1：53. 最大子数组和（dp）
7-2：152. 乘积最大子数组（dp）（需要维护两个）
7-3：41. 缺失的第一个正数（空间复杂度为n，空间复杂度为1）

8-1：20. 有效的括号
8-2：200. 岛屿数量 （dfs）（走过的进行标记）
8-3：76. 最小覆盖子串 （滑动窗口）

9-1：105. 从前序与中序遍历序列构造二叉树（递归）（用map定位）
9-2：103. 二叉树的锯齿形层序遍历
9-3：（ZJ）bytedance-010. 数组组成最大数

10-1：94.二叉树的中序遍历 （颜色标记法）二叉树的前序遍历 二叉树的后序遍历
10-2：102. 二叉树的层序遍历（用DFS递归怎么做层次遍历？做法2）
10-3：394. 字符串解码（两个栈）

11-1：415. 字符串相加（模拟竖型加法）
11-2：5. 最长回文子串 （dp，中心扩展法）（中心点有一个，两个，两种情况）
11-3：72. 编辑距离

12-1：64. 最小路径和（矩阵dp）
12-2：300. 最长递增子序列（二分法、dp法） dp+二分优化 nlogn做法
12-3：（已做）https://leetcode-cn.com/problems/yBGFyZ/  bytedance-004. 机器人跳跃问题

13-1：88. 合并两个有序数组
13-2：31. 下一个排列
13-3：4. 寻找两个正序数组的中位数（未做）（复杂度有严格要求）（博客有）（LC4）

14-1：买卖股票 、122. 买卖股票的最佳时机 II
14-2：56. 合并区间（已做）（涉及二维数组排序）
14-3：135. 分发糖果（已做）（两遍贪心）

15-1：232. 用栈实现队列
15-2：22. 括号生成
15-3：128. 最长连续序列 (hash表）

16-1：bytedance-007. 化学公式解析
16-2：129. 求根节点到叶节点数字之和 （字符串）
16-3：239. 滑动窗口最大值（双向队列）

17-1：141. 环形链表（快慢指针 虚拟节点）
17-2：236. 二叉树的最近公共祖先 LCA
17-3：92. 反转链表 II （小米）

18-1：322. 零钱兑换 （DP）//dp[i]代表凑出i金额所需要的最小硬币数。
18-2：198. 打家劫舍//dp[i] 代表 偷窃 前i个（包括i）房屋的最大金额。
18-3：bytedance-003. 古生物血缘远近判定 == 11-3 72. 编辑距离 （未做）

19-1：160. 相交链表//第一轮让两个到达末尾的节点指向另一个链表的头部, 最后如果相遇则为交点(在第一轮移动中恰好抹除了长度差)
19-2：143. 重排链表 （未做）
19-3：142. 环形链表 II （找入口节点）//找入口节点就不能使用像141的做法那样设置一个虚拟节点了。

20-1：704. 二分查找
20-2：43. 字符串相乘 （未做）
20-3：bytedance-002. 发下午茶 （已做）（二分，写check函数）

21-1：69. x 的平方根 //与小数相关的二分习惯性使用for加循环次数，一般100都可以的了。这个70是测出来的。
21-2：912. 排序数组
21-3：887. 鸡蛋掉落

22-1：151. 颠倒字符串中的单词 （字符串内置方法）
22-2：46. 全排列（不含重复数字的数组）（递归）
22-3：2. 两数相加 （链表）

















































